rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() {
      return request.auth != null;
    }

    function isSelf(uid) {
      return signedIn() && request.auth.uid == uid;
    }

    // 관리자 판단: 내 사용자 문서(users/{myUid})의 role == 'admin'
    function isAdmin() {
      return signedIn()
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // 불변 필드가 바뀌지 않았는지 체크
    function immutableUnchanged() {
      return request.resource.data.uniqueId == resource.data.uniqueId
          && request.resource.data.joinedAt == resource.data.joinedAt;
    }

    match /users/{uid} {

      // 최초 로그인 시 본인 문서 생성 허용
      allow create: if isSelf(uid);

      // 읽기: 본인 or 관리자
      allow get, list: if isSelf(uid) || isAdmin();

      // 본인 문서 업데이트(제한: email, lastLoginAt 만)
      allow update: if isSelf(uid)
        && immutableUnchanged()
        && request.resource.data.diff(resource.data).changedKeys().hasOnly([
            'email',
            'lastLoginAt'
          ]);

      // 관리자 업데이트(제한: role, isSubscribed, subscriptionStartAt, subscriptionEndAt 만)
      allow update: if isAdmin()
        && immutableUnchanged()
        && request.resource.data.diff(resource.data).changedKeys().hasOnly([
            'role',
            'isSubscribed',
            'subscriptionStartAt',
            'subscriptionEndAt'
          ]);
    }
  }
}
